name: build_and_push_to_ecr

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - feature-git-action-yq-commit-fit

permissions:
  id-token: write
  contents: write

jobs:
  build_and_push_to_ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::920373021859:role/ze-my-ecr-role
          aws-region: eu-west-1
          role-session-name: APIActions
          role-duration-seconds: 3600

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Amazon ECR
        id: ecr_login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up yq
        run: |
          sudo apt-get update > /dev/null 2>&1
          sudo apt-get install -y wget > /dev/null 2>&1
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Build & push
        run: |
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          
          ECR_URI="${AWS_ACCOUNT_ID}.dkr.ecr.eu-west-1.amazonaws.com/ze-my-ecr"
          
          cd counter_service
          docker build -t $ECR_URI:$GITHUB_SHA .

          docker tag $ECR_URI:$GITHUB_SHA $ECR_URI:latest

          docker push $ECR_URI:$GITHUB_SHA
          docker push $ECR_URI:latest

      - name: Verify Docker image in ECR
        run: |
          aws ecr describe-images --repository-name ze-my-ecr --region eu-west-1

      # - name: Login to Github
      #   run: |
      #     git config --global user.email "${{ secrets.USER_EMAIL }}"
      #     git config --global user.name "${{ secrets.USER_NAME }}"
      #     echo "${{ secrets.PAT_ACTIONS }}" | gh auth login --with-token

      # - name: Checkout repository
      #   uses: actions/checkout@v4

      # - name: Update image tag in values.yaml
      #   run: |
      #     echo "Updating image tag to ${{ github.sha }}"
      #     cd devops-infra
      #     git checkout master
      #     cd charts/counter-service
      #     yq eval ".image.tag = \"${{ github.sha }}\"" -i values.yaml
      #     git add values.yaml
      #     git commit -m "Update github-sha to image tag value"
      #     git push origin main
      #     echo "Updated image tag to ${{ github.sha }}"

      - name: Set up Git
        run: |
          git config --global user.name "${{ secrets.USER_NAME }}"
          git config --global user.email "${{ secrets.USER_EMAIL }}"

      - name: Clone target repository
        run: |
          git clone https://${{ secrets.PAT_ACTIONS }}@github.com/edgaroviz/devops-infra.git


      - name: Change image tag in chart values file
        run: |
          echo "Change image tag to ${{ github.sha }}"
          pwd
          ls
          cd devops-infra
          ls

          yq eval ".image.tag = \"${{ github.sha }}\"" -i devops-infra/charts/counter-service/values.yaml
          git -C devops-infra commit -am "Updated image tag in values.yaml after new image build"
          git -C devops-infra push origin main
          echo "Updated image tag to ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY